# Title: Summary, imperative, start upper case, don't end with a period
# <type>[optional scope]: <description: imperative mood>
# No more than 50 chars. #### 50 chars is here:  #
#
# TYPES:
#    breaking: Changes that should result in a new major version release.
#    build:    Changes that affect the build system or external dependencies
#    ci:       Changes to our CI configuration files and scripts
#    doc:      Documentation only changes
#    feat:     A new feature
#    fix:      A bug fix
#    perf:     A code change that improves performance
#    refactor: A code change that neither fixes a bug nor adds a feature
#    remove:   A code change that removes a feature.
#    style:    Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
#    test:     Adding missing tests or correcting existing tests
#    todo:     Adding notes like FIXME: WARNING: NOTE:
#
#    Use plural if multiple items affected.
#
# EXAMPLES:
#   feat(net/http): support disabling built-in HTTP/2 with a new build tag
#   fix(net/url, net/http): relax CTL-in-URL validation to only ASCII CTLs
#   refactor(lsp): clean up neovim lsp implementation
#
# Remember blank line between title and body.
#
# Body: Explain *what* and *why* (not *how*). Include task ID (Jira issue).
# Wrap at 72 chars. ################################## which is here:  #
#
# At the end: Include Co-authored-by for all contributors.
# Include at least one empty line before it. Format:
# Co-authored-by: name <user@users.noreply.github.com>
#
# How to Write a Git Commit Message:
# https://chris.beams.io/posts/git-commit/
#
# 1. Separate subject from body with a blank line
# 2. Limit the subject line to 50 characters
# 3. Capitalize the subject line
# 4. Do not end the subject line with a period
# 5. Use the imperative mood in the subject line
# 6. Wrap the body at 72 characters
# 7. Use the body to explain what and why vs. how
#
# REFERENCE:
#   https://www.conventionalcommits.org/